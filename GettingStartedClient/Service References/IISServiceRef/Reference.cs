//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GettingStartedClient.IISServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IISServiceRef.IServiceIIS")]
    public interface IServiceIIS {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://Microsoft.ServiceModel.Samples) of message AddRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Add", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/AddResponse")]
        GettingStartedClient.IISServiceRef.AddResponse Add(GettingStartedClient.IISServiceRef.AddRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Add", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/AddResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.AddResponse> AddAsync(GettingStartedClient.IISServiceRef.AddRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://Microsoft.ServiceModel.Samples) of message SubtractRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Subtract", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/SubtractResponse")]
        GettingStartedClient.IISServiceRef.SubtractResponse Subtract(GettingStartedClient.IISServiceRef.SubtractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Subtract", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/SubtractResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.SubtractResponse> SubtractAsync(GettingStartedClient.IISServiceRef.SubtractRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://Microsoft.ServiceModel.Samples) of message MultiplyRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Multiply", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/MultiplyResponse")]
        GettingStartedClient.IISServiceRef.MultiplyResponse Multiply(GettingStartedClient.IISServiceRef.MultiplyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Multiply", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/MultiplyResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.MultiplyResponse> MultiplyAsync(GettingStartedClient.IISServiceRef.MultiplyRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://Microsoft.ServiceModel.Samples) of message DivideRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Divide", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/DivideResponse")]
        GettingStartedClient.IISServiceRef.DivideResponse Divide(GettingStartedClient.IISServiceRef.DivideRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/ICalculator/Divide", ReplyAction="http://Microsoft.ServiceModel.Samples/ICalculator/DivideResponse")]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.DivideResponse> DivideAsync(GettingStartedClient.IISServiceRef.DivideRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIIS/circleArea", ReplyAction="http://tempuri.org/IServiceIIS/circleAreaResponse")]
        double circleArea(double n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceIIS/circleArea", ReplyAction="http://tempuri.org/IServiceIIS/circleAreaResponse")]
        System.Threading.Tasks.Task<double> circleAreaAsync(double n2);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class AddRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double n1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=1)]
        public double n2;
        
        public AddRequest() {
        }
        
        public AddRequest(double n1, double n2) {
            this.n1 = n1;
            this.n2 = n2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddResponse", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class AddResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double AddResult;
        
        public AddResponse() {
        }
        
        public AddResponse(double AddResult) {
            this.AddResult = AddResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Subtract", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class SubtractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double n1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=1)]
        public double n2;
        
        public SubtractRequest() {
        }
        
        public SubtractRequest(double n1, double n2) {
            this.n1 = n1;
            this.n2 = n2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SubtractResponse", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class SubtractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double SubtractResult;
        
        public SubtractResponse() {
        }
        
        public SubtractResponse(double SubtractResult) {
            this.SubtractResult = SubtractResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Multiply", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class MultiplyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double n1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=1)]
        public double n2;
        
        public MultiplyRequest() {
        }
        
        public MultiplyRequest(double n1, double n2) {
            this.n1 = n1;
            this.n2 = n2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MultiplyResponse", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class MultiplyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double MultiplyResult;
        
        public MultiplyResponse() {
        }
        
        public MultiplyResponse(double MultiplyResult) {
            this.MultiplyResult = MultiplyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Divide", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class DivideRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double n1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=1)]
        public double n2;
        
        public DivideRequest() {
        }
        
        public DivideRequest(double n1, double n2) {
            this.n1 = n1;
            this.n2 = n2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DivideResponse", WrapperNamespace="http://Microsoft.ServiceModel.Samples", IsWrapped=true)]
    public partial class DivideResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Microsoft.ServiceModel.Samples", Order=0)]
        public double DivideResult;
        
        public DivideResponse() {
        }
        
        public DivideResponse(double DivideResult) {
            this.DivideResult = DivideResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceIISChannel : GettingStartedClient.IISServiceRef.IServiceIIS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceIISClient : System.ServiceModel.ClientBase<GettingStartedClient.IISServiceRef.IServiceIIS>, GettingStartedClient.IISServiceRef.IServiceIIS {
        
        public ServiceIISClient() {
        }
        
        public ServiceIISClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceIISClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceIISClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceIISClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GettingStartedClient.IISServiceRef.AddResponse GettingStartedClient.IISServiceRef.IServiceIIS.Add(GettingStartedClient.IISServiceRef.AddRequest request) {
            return base.Channel.Add(request);
        }
        
        public double Add(double n1, double n2) {
            GettingStartedClient.IISServiceRef.AddRequest inValue = new GettingStartedClient.IISServiceRef.AddRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            GettingStartedClient.IISServiceRef.AddResponse retVal = ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).Add(inValue);
            return retVal.AddResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.AddResponse> GettingStartedClient.IISServiceRef.IServiceIIS.AddAsync(GettingStartedClient.IISServiceRef.AddRequest request) {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.AddResponse> AddAsync(double n1, double n2) {
            GettingStartedClient.IISServiceRef.AddRequest inValue = new GettingStartedClient.IISServiceRef.AddRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            return ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).AddAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GettingStartedClient.IISServiceRef.SubtractResponse GettingStartedClient.IISServiceRef.IServiceIIS.Subtract(GettingStartedClient.IISServiceRef.SubtractRequest request) {
            return base.Channel.Subtract(request);
        }
        
        public double Subtract(double n1, double n2) {
            GettingStartedClient.IISServiceRef.SubtractRequest inValue = new GettingStartedClient.IISServiceRef.SubtractRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            GettingStartedClient.IISServiceRef.SubtractResponse retVal = ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).Subtract(inValue);
            return retVal.SubtractResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.SubtractResponse> GettingStartedClient.IISServiceRef.IServiceIIS.SubtractAsync(GettingStartedClient.IISServiceRef.SubtractRequest request) {
            return base.Channel.SubtractAsync(request);
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.SubtractResponse> SubtractAsync(double n1, double n2) {
            GettingStartedClient.IISServiceRef.SubtractRequest inValue = new GettingStartedClient.IISServiceRef.SubtractRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            return ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).SubtractAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GettingStartedClient.IISServiceRef.MultiplyResponse GettingStartedClient.IISServiceRef.IServiceIIS.Multiply(GettingStartedClient.IISServiceRef.MultiplyRequest request) {
            return base.Channel.Multiply(request);
        }
        
        public double Multiply(double n1, double n2) {
            GettingStartedClient.IISServiceRef.MultiplyRequest inValue = new GettingStartedClient.IISServiceRef.MultiplyRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            GettingStartedClient.IISServiceRef.MultiplyResponse retVal = ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).Multiply(inValue);
            return retVal.MultiplyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.MultiplyResponse> GettingStartedClient.IISServiceRef.IServiceIIS.MultiplyAsync(GettingStartedClient.IISServiceRef.MultiplyRequest request) {
            return base.Channel.MultiplyAsync(request);
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.MultiplyResponse> MultiplyAsync(double n1, double n2) {
            GettingStartedClient.IISServiceRef.MultiplyRequest inValue = new GettingStartedClient.IISServiceRef.MultiplyRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            return ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).MultiplyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GettingStartedClient.IISServiceRef.DivideResponse GettingStartedClient.IISServiceRef.IServiceIIS.Divide(GettingStartedClient.IISServiceRef.DivideRequest request) {
            return base.Channel.Divide(request);
        }
        
        public double Divide(double n1, double n2) {
            GettingStartedClient.IISServiceRef.DivideRequest inValue = new GettingStartedClient.IISServiceRef.DivideRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            GettingStartedClient.IISServiceRef.DivideResponse retVal = ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).Divide(inValue);
            return retVal.DivideResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.DivideResponse> GettingStartedClient.IISServiceRef.IServiceIIS.DivideAsync(GettingStartedClient.IISServiceRef.DivideRequest request) {
            return base.Channel.DivideAsync(request);
        }
        
        public System.Threading.Tasks.Task<GettingStartedClient.IISServiceRef.DivideResponse> DivideAsync(double n1, double n2) {
            GettingStartedClient.IISServiceRef.DivideRequest inValue = new GettingStartedClient.IISServiceRef.DivideRequest();
            inValue.n1 = n1;
            inValue.n2 = n2;
            return ((GettingStartedClient.IISServiceRef.IServiceIIS)(this)).DivideAsync(inValue);
        }
        
        public double circleArea(double n2) {
            return base.Channel.circleArea(n2);
        }
        
        public System.Threading.Tasks.Task<double> circleAreaAsync(double n2) {
            return base.Channel.circleAreaAsync(n2);
        }
    }
}
